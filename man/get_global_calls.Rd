% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expressions.R
\name{get_global_calls}
\alias{get_global_calls}
\title{Get global function calls from a function}
\usage{
get_global_calls(funcname, funcnames, funcs, envir = parent.frame(),
  include_base = TRUE, multiples = FALSE)
}
\arguments{
\item{funcname}{Name of the function to study.}

\item{funcnames}{Names of the parsed functions from the file,
in the order they appear. We need this is calculate line and column
positions.}

\item{funcs}{All expressions parsed from the file.}

\item{envir}{The environment containing the function. This environment
is also used to look for S3 methods.}

\item{include_base}{Whether to include calls to base functions
in the output.}

\item{multiples}{Whether to keep multiplicity in the result. I.e.
if this argument is \code{TRUE} and \code{func} calls \code{foobar}
twice, then \code{foobar} is included in the result twice.}
}
\value{
A data frame of function calls and call types.
}
\description{
Note the results are approximate only. R's dynamic nature
does not allow us to always find the global calls reliably.
}
\details{
Calls can be: \itemize{
  \item Direct function calls.
  \item Function calls via \code{do.call}.
  \item Calls to external functions via \code{.C}, \code{.Call}, etc.
  \item We assume that an S3 generic calls all its methods
    in the supplied environment.
}

Internally we use \code{\link[codetools]{findGlobals}} for finding
the global calls and variables.

Note that by default calls to base function are also included in the
result, even of they are primitive functions (e.g. \code{<-},
\code{==}, etc.).
}
\keyword{internal}

